package com.quizz.entities;
// Generated Feb 20, 2025, 8:41:28â€¯PM by Hibernate Tools 4.3.6.Final

import static jakarta.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * Questions generated by hbm2java
 */
@Entity
@Table(name = "questions")
public class Questions implements java.io.Serializable {

    private Long questionId;
    private Quizzes quizzes;
    private String questionText;
    private String questionType;
    private Integer score;
    private Integer orderIndex;
    private Date createdAt;
    private Date deletedAt;
    private List<Answers> answerses = new ArrayList<Answers>(0);
    private List<UserAnswers> userAnswerses = new ArrayList<UserAnswers>(0);

    public Questions() {
    }

    public Questions(String questionText, String questionType) {
	this.questionText = questionText;
	this.questionType = questionType;
    }

    public Questions(Quizzes quizzes, String questionText, String questionType, Integer score, Integer orderIndex,
	    Date createdAt, Date deletedAt, List<Answers> answerses, List<UserAnswers> userAnswerses) {
	this.quizzes = quizzes;
	this.questionText = questionText;
	this.questionType = questionType;
	this.score = score;
	this.orderIndex = orderIndex;
	this.createdAt = createdAt;
	this.deletedAt = deletedAt;
	this.answerses = answerses;
	this.userAnswerses = userAnswerses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "question_id", unique = true, nullable = false)
    public Long getQuestionId() {
	return this.questionId;
    }

    public void setQuestionId(Long questionId) {
	this.questionId = questionId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "quizz_id")
    public Quizzes getQuizzes() {
	return this.quizzes;
    }

    public void setQuizzes(Quizzes quizzes) {
	this.quizzes = quizzes;
    }

    @Column(name = "question_text", nullable = false, length = 65535)
    public String getQuestionText() {
	return this.questionText;
    }

    public void setQuestionText(String questionText) {
	this.questionText = questionText;
    }

    @Column(name = "question_type", nullable = false, length = 20)
    public String getQuestionType() {
	return this.questionType;
    }

    public void setQuestionType(String questionType) {
	this.questionType = questionType;
    }

    @Column(name = "score")
    public Integer getScore() {
	return this.score;
    }

    public void setScore(Integer score) {
	this.score = score;
    }

    @Column(name = "order_index")
    public Integer getOrderIndex() {
	return this.orderIndex;
    }

    public void setOrderIndex(Integer orderIndex) {
	this.orderIndex = orderIndex;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", length = 19)
    public Date getCreatedAt() {
	return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
	this.createdAt = createdAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "deleted_at", length = 19)
    public Date getDeletedAt() {
	return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
	this.deletedAt = deletedAt;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "questions")
    public List<Answers> getAnswerses() {
	return this.answerses;
    }

    public void setAnswerses(List<Answers> answerses) {
	this.answerses = answerses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "questions")
    public List<UserAnswers> getUserAnswerses() {
	return this.userAnswerses;
    }

    public void setUserAnswerses(List<UserAnswers> userAnswerses) {
	this.userAnswerses = userAnswerses;
    }

}
