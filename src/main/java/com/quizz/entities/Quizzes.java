package com.quizz.entities;
// Generated Feb 20, 2025, 8:41:28â€¯PM by Hibernate Tools 4.3.6.Final

import static jakarta.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * Quizzes generated by hbm2java
 */
@Entity
@Table(name = "quizzes")
public class Quizzes implements java.io.Serializable {

    private Long quizzId;
    private Categories categories;
    private Users users;
    private String title;
    private String description;
    private Integer timeLimit;
    private Integer totalScore;
    private String status;
    private String visibility;
    private Date createdAt;
    private Date updatedAt;
    private Date deletedAt;
    private List<QuizzAttempts> quizzAttemptses = new ArrayList<QuizzAttempts>(0);
    private List<Questions> questionses = new ArrayList<Questions>(0);

    public Quizzes() {
    }

    public Quizzes(String title, String status, String visibility) {
	this.title = title;
	this.status = status;
	this.visibility = visibility;
    }

    public Quizzes(Categories categories, Users users, String title, String description, Integer timeLimit,
	    Integer totalScore, String status, String visibility, Date createdAt, Date updatedAt, Date deletedAt,
	    List<QuizzAttempts> quizzAttemptses, List<Questions> questionses) {
	this.categories = categories;
	this.users = users;
	this.title = title;
	this.description = description;
	this.timeLimit = timeLimit;
	this.totalScore = totalScore;
	this.status = status;
	this.visibility = visibility;
	this.createdAt = createdAt;
	this.updatedAt = updatedAt;
	this.deletedAt = deletedAt;
	this.quizzAttemptses = quizzAttemptses;
	this.questionses = questionses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "quizz_id", unique = true, nullable = false)
    public Long getQuizzId() {
	return this.quizzId;
    }

    public void setQuizzId(Long quizzId) {
	this.quizzId = quizzId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "category_id")
    public Categories getCategories() {
	return this.categories;
    }

    public void setCategories(Categories categories) {
	this.categories = categories;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "created_by")
    public Users getUsers() {
	return this.users;
    }

    public void setUsers(Users users) {
	this.users = users;
    }

    @Column(name = "title", nullable = false)
    public String getTitle() {
	return this.title;
    }

    public void setTitle(String title) {
	this.title = title;
    }

    @Column(name = "description", length = 65535)
    public String getDescription() {
	return this.description;
    }

    public void setDescription(String description) {
	this.description = description;
    }

    @Column(name = "time_limit")
    public Integer getTimeLimit() {
	return this.timeLimit;
    }

    public void setTimeLimit(Integer timeLimit) {
	this.timeLimit = timeLimit;
    }

    @Column(name = "total_score")
    public Integer getTotalScore() {
	return this.totalScore;
    }

    public void setTotalScore(Integer totalScore) {
	this.totalScore = totalScore;
    }

    @Column(name = "status", nullable = false, length = 20)
    public String getStatus() {
	return this.status;
    }

    public void setStatus(String status) {
	this.status = status;
    }

    @Column(name = "visibility", nullable = false, length = 20)
    public String getVisibility() {
	return this.visibility;
    }

    public void setVisibility(String visibility) {
	this.visibility = visibility;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", length = 19)
    public Date getCreatedAt() {
	return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
	this.createdAt = createdAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_at", length = 19)
    public Date getUpdatedAt() {
	return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
	this.updatedAt = updatedAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "deleted_at", length = 19)
    public Date getDeletedAt() {
	return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
	this.deletedAt = deletedAt;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "quizzes")
    public List<QuizzAttempts> getQuizzAttemptses() {
	return this.quizzAttemptses;
    }

    public void setQuizzAttemptses(List<QuizzAttempts> quizzAttemptses) {
	this.quizzAttemptses = quizzAttemptses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "quizzes")
    public List<Questions> getQuestionses() {
	return this.questionses;
    }

    public void setQuestionses(List<Questions> questionses) {
	this.questionses = questionses;
    }

}
