package com.quizz.entities;
// Generated Feb 20, 2025, 8:41:28â€¯PM by Hibernate Tools 4.3.6.Final

import static jakarta.persistence.GenerationType.IDENTITY;

import java.util.Date;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * Rankings generated by hbm2java
 */
@Entity
@Table(name = "rankings")
public class Rankings implements java.io.Serializable {

    private Long rankingId;
    private Users users;
    private Integer totalScore;
    private Integer quizzesCompleted;
    private Integer correctAnswers;
    private Integer rankPosition;
    private Date updatedAt;
    private Date createdAt;

    public Rankings() {
    }

    public Rankings(Users users, Integer totalScore, Integer quizzesCompleted, Integer correctAnswers,
	    Integer rankPosition, Date updatedAt, Date createdAt) {
	this.users = users;
	this.totalScore = totalScore;
	this.quizzesCompleted = quizzesCompleted;
	this.correctAnswers = correctAnswers;
	this.rankPosition = rankPosition;
	this.updatedAt = updatedAt;
	this.createdAt = createdAt;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ranking_id", unique = true, nullable = false)
    public Long getRankingId() {
	return this.rankingId;
    }

    public void setRankingId(Long rankingId) {
	this.rankingId = rankingId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id")
    public Users getUsers() {
	return this.users;
    }

    public void setUsers(Users users) {
	this.users = users;
    }

    @Column(name = "total_score")
    public Integer getTotalScore() {
	return this.totalScore;
    }

    public void setTotalScore(Integer totalScore) {
	this.totalScore = totalScore;
    }

    @Column(name = "quizzes_completed")
    public Integer getQuizzesCompleted() {
	return this.quizzesCompleted;
    }

    public void setQuizzesCompleted(Integer quizzesCompleted) {
	this.quizzesCompleted = quizzesCompleted;
    }

    @Column(name = "correct_answers")
    public Integer getCorrectAnswers() {
	return this.correctAnswers;
    }

    public void setCorrectAnswers(Integer correctAnswers) {
	this.correctAnswers = correctAnswers;
    }

    @Column(name = "rank_position")
    public Integer getRankPosition() {
	return this.rankPosition;
    }

    public void setRankPosition(Integer rankPosition) {
	this.rankPosition = rankPosition;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_at", length = 19)
    public Date getUpdatedAt() {
	return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
	this.updatedAt = updatedAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", length = 19)
    public Date getCreatedAt() {
	return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
	this.createdAt = createdAt;
    }

}
